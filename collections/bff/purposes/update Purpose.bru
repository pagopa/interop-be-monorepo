meta {
  name: update Purpose
  type: http
  seq: 3
}

post {
  url: {{host-bff}}/purposes/:purposeId
  body: json
  auth: none
}

params:path {
  purposeId: 26d9891f-fe05-4bff-82fd-fc4edad2d076
}

headers {
  Authorization: {{JWT}}
  x-correlation-id: {{correlation-id}}
}

body:json {
  {
    "title": "{{randomLoremWord}} title test",
    "description": "{{randomLoremWords}} description test",
    "isFreeOfCharge": {{randomBoolean}},
    "dailyCalls": {{randomInt}},
    "freeOfChargeReason": "{{randomLoremWords}}",
    "riskAnalysisForm": {
      "version": "3.0",
      "answers": {
              "purpose": ["INSTITUTIONAL"],
      "institutionalPurpose": ["MyPurpose"],
      "personalDataTypes": ["OTHER"],
      "otherPersonalDataTypes": ["MyDataTypes"],
      "legalBasis": ["LEGAL_OBLIGATION", "PUBLIC_INTEREST"],
      "legalObligationReference": ["somethingLegal"],
      "legalBasisPublicInterest": ["RULE_OF_LAW"],
      "ruleOfLawText": ["TheLaw"],
      "knowsDataQuantity": ["NO"],
      "dataQuantity": [],
      "deliveryMethod": ["ANONYMOUS"],
      "policyProvided": ["YES"],
      "confirmPricipleIntegrityAndDiscretion": ["true"],
      "reasonPolicyNotProvided": ["Because"],
      "doneDpia": ["NO"],
      "dataDownload": ["YES"],
      "confirmDataRetentionPeriod": ["true"],
      "purposePursuit": ["MERE_CORRECTNESS"],
      "checkedExistenceMereCorrectnessInteropCatalogue": ["true"],
      "usesThirdPartyData": ["NO"],
      "declarationConfirmGDPR": ["true"]
    }}
  }
}

script:pre-request {
  const randomInt = Math.round(Math.random() * 10000);
    bru.setVar("randomInt", randomInt);
    
  const randomBoolean = Math.random() < 0.5;
  bru.setVar("randomBoolean", randomBoolean);
    
  const loremWords = ["example", "random", "data", "sample", "api", "bruno", "mock", "testing", "validation", "service", "response", "request"];
  const randomLoremWord = loremWords[Math.floor(Math.random() * loremWords.length)];
  bru.setVar("randomLoremWord", randomLoremWord);
    
  let randomLoremWords = "";
  while (randomLoremWords.length < 10) {
    randomLoremWords = loremWords
      .sort(() => 0.5 - Math.random()) // Mescola l'array
      .slice(0, Math.floor(Math.random() * 5) + 2) // Prendi almeno 2-6 parole
      .join(" ");
  }
    
  bru.setVar("randomLoremWords", randomLoremWords);
}

docs {
  Updates a Purpose if not yet activated
}
