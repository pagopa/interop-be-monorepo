meta {
  name: Create purpose
  type: http
  seq: 3
}

post {
  url: {{host-m2m-gw}}/purposes
  body: json
  auth: none
}

headers {
  Authorization: {{JWT-M2M-ADMIN}}
}

body:json {
  {
    "eserviceId": "{{eserviceId}}",
    "delegationId": "{{delegationId}}",
    "title": "{{randomLoremWord}} test",
    "description": "{{randomLoremWords}}",
    "isFreeOfCharge": {{randomBoolean}},
    "dailyCalls": {{randomInt}},
    "riskAnalysisForm": {
        "version": "3.0",
        "answers": {
            "purpose": ["INSTITUTIONAL"],
            "institutionalPurpose": ["MyPurpose"],
            "personalDataTypes": ["OTHER"],
            "otherPersonalDataTypes": ["MyDataTypes"],
            "legalBasis": ["LEGAL_OBLIGATION", "PUBLIC_INTEREST"],
            "legalObligationReference": ["somethingLegal"],
            "legalBasisPublicInterest": ["RULE_OF_LAW"],
            "ruleOfLawText": ["TheLaw"],
            "knowsDataQuantity": ["NO"],
            "dataQuantity": [],
            "deliveryMethod": ["ANONYMOUS"],
            "policyProvided": ["NO"],
            "confirmPricipleIntegrityAndDiscretion": ["true"],
            "reasonPolicyNotProvided": ["Because"],
            "doneDpia": ["NO"],
            "dataDownload": ["YES"],
            "confirmDataRetentionPeriod": ["true"],
            "purposePursuit": ["MERE_CORRECTNESS"],
            "checkedExistenceMereCorrectnessInteropCatalogue": ["true"],
            "usesThirdPartyData": ["NO"],
            "declarationConfirmGDPR": ["true"]
        }
    },
    "freeOfChargeReason": "{{randomLoremWords}}"
  }
}

script:pre-request {
  const randomInt = Math.round(Math.random() * 10000);
  bru.setVar("randomInt", randomInt);
  
  const randomBoolean = Math.random() < 0.5;
  bru.setVar("randomBoolean", randomBoolean);
  
  const loremWords = ["example", "random", "data", "sample", "api", "bruno", "mock", "testing", "validation", "service", "response", "request"];
  const randomLoremWord = loremWords[Math.floor(Math.random() * loremWords.length)];
  bru.setVar("randomLoremWord", randomLoremWord);
  
  let randomLoremWords = "";
  while (randomLoremWords.length < 10) {
    randomLoremWords = loremWords
      .sort(() => 0.5 - Math.random()) // Mescola l'array
      .slice(0, Math.floor(Math.random() * 5) + 2) // Prendi almeno 2-6 parole
      .join(" ");
  }
  
  bru.setVar("randomLoremWords", randomLoremWords);
  
  
}

docs {
  Creates the Purpose
}
