meta {
  name: Update purpose
  type: http
  seq: 13
}

patch {
  url: {{host-m2m-gw}}/purposes/:purposeId
  body: none
  auth: none
}

params:path {
  purposeId: {{purposeId}}
}

headers {
  Authorization: {{JWT-M2M-ADMIN}}
}

body:json {
  {
      "title": "{{randomName}}",
      "description": "a purpose long description updated",
      "isFreeOfCharge": false,
      "dailyCalls": 200,
      "freeOfChargeReason": "",
      "riskAnalysisForm": {
          "version": "3.0",
          "answers": {
              "purpose": ["INSTITUTIONAL"],
              "institutionalPurpose": ["Another updated purpose"],
              "personalDataTypes": ["OTHER"],
              "otherPersonalDataTypes": ["some other data types"],
              "legalBasis": ["LEGAL_OBLIGATION", "PUBLIC_INTEREST"],
              "legalObligationReference": ["somethingLegal"],
              "legalBasisPublicInterest": ["RULE_OF_LAW"],
              "ruleOfLawText": ["TheLaw"],
              "knowsDataQuantity": ["YES"],
              "dataQuantity": ["QUANTITY_500_TO_1000"],
              "deliveryMethod": ["ANONYMOUS"],
              "policyProvided": ["NO"],
              "confirmPricipleIntegrityAndDiscretion": ["true"],
              "reasonPolicyNotProvided": ["Because"],
              "doneDpia": ["NO"],
              "dataDownload": ["YES"],
              "confirmDataRetentionPeriod": ["true"],
              "purposePursuit": ["MERE_CORRECTNESS"],
              "checkedExistenceMereCorrectnessInteropCatalogue": ["true"],
              "usesThirdPartyData": ["NO"],
              "declarationConfirmGDPR": ["true"]
          }
      }
  }
}

vars:post-response {
  purposeId: res.body.id
}

script:pre-request {
  const random = Math.round(Math.random() * 100)
  
  bru.setVar("randomName",`test name ${random}`)
}

