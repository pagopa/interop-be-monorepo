name: PR validation
on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d2759364c9af683 # v4
      - name: Cache turbo setup
        uses: actions/cache@640a1c2554105b57832a23eea0b4672fc7a790d5 # v4
        with:
          path: |
            .turbo
            packages/*/.turbo
          key: ${{ runner.os }}-turbo-check-formatting-${{ github.ref_name }}
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          run_install: true
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: ./package.json
      - run: pnpm format:check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d2759364c9af683 # v4
      - name: Cache turbo setup
        uses: actions/cache@640a1c2554105b57832a23eea0b4672fc7a790d5 # v4
        with:
          path: |
            .turbo
            packages/*/.turbo
          key: ${{ runner.os }}-turbo-lint-${{ github.ref_name }}
      - uses: actions/setup-node@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          node-version-file: ./package.json
      - uses: pnpm/action-setup@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          run_install: true
      - run: pnpm lint

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d2759364c9af683 # v4
      - name: Cache turbo setup
        uses: actions/cache@640a1c2554105b57832a23eea0b4672fc7a790d5 # v4
        with:
          path: |
            .turbo
            packages/*/.turbo
          key: ${{ runner.os }}-turbo-check-${{ github.ref_name }}
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: ./package.json
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          run_install: true
      - run: pnpm check

  find_test_groups:
    name: Find Test Groups
    needs: [formatting, lint, check]
    runs-on: ubuntu-latest
    outputs:
      test_groups: ${{ steps.set_groups_output.outputs.test_groups }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d2759364c9af683 # v4
      - name: Find and parse test.config.json files
        id: set_groups_output
        run: |
          ALL_TEST_GROUPS="[]"
          TEMP=$(find packages -maxdepth 2 -type f -name "test.config.json" | while read -r cfg; do
            PKG_DIR=$(dirname "$cfg")
            PKG_NAME=$(basename "$PKG_DIR")
            jq --arg name "$PKG_NAME" \
               --arg base "$PKG_DIR" \
               '{ name: $name, paths: [ .testPaths[]? | "\($base)/\(.)" ] }' \
               "$cfg"
          done | jq -s .)

          if [[ "$TEMP" != "null" && "$TEMP" != "[]" ]]; then
            ALL_TEST_GROUPS="$TEMP"
          fi

          echo "Discovered: $ALL_TEST_GROUPS"
          echo "test_groups=$(jq -c <<< \"$ALL_TEST_GROUPS\")" >> "$GITHUB_OUTPUT"
      - name: Debug test_groups
        run: |
          echo ">>> test_groups string:"
          echo '${{ needs.find_test_groups.outputs.test_groups }}' | jq .

  run_grouped_tests:
    name: Run Tests
    needs: find_test_groups
    if: needs.find_test_groups.outputs.test_groups != '[]' && fromJson(needs.find_test_groups.outputs.test_groups) | length > 0
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        group: ${{ fromJson(needs.find_test_groups.outputs.test_groups) }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache turbo setup
        uses: actions/cache@640a1c2554105b57832a23eea0b4672fc7a790d5 # v4
        with:
          path: |
            .turbo
            packages/*/.turbo
          key: ${{ runner.os }}-turbo-test-${{ matrix.group.name }}-${{ github.ref_name }}
      - uses: pnpm/action-setup@v4
        with:
          run_install: true
      - uses: actions/setup-node@v4
        with:
          node-version-file: ./package.json
      - name: Install deps
        run: pnpm install --frozen-lockfile
      - name: Run Vitest
        run: |
          for p in "${{ toJSON(matrix.group.paths) }}" | jq -r '.[]'; do
            echo "Running tests in $p"
            pnpm --dir packages/${{ matrix.group.name }} test "$p"
          done

  lint-openapi:
    name: Lint OpenAPI specs
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d2759364c9af683 # v4
      - uses: stoplightio/spectral-action@577bade2d6e0eeb50528c94182a5588bf961ae8f # v0.8.12
        with:
          file_glob: "./packages/api-clients/openâ€‘api/!(...api.yml)"

  find_dockerfiles:
    name: Find Dockerfiles
    needs: [formatting, lint, check, run_grouped_tests, lint-openapi]
    if: github.base_ref == 'develop' || github.base_ref == 'main'
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set.output.packages }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d2759364c9af683 # v4
      - id: set
        run: |
          PACKAGES=$(find packages -type f -name Dockerfile | awk -F/ '{print $2}' | jq -R -s -c 'split("\n")[:-1]')
          echo "packages=$PACKAGES" >> "$GITHUB_OUTPUT"

  docker_build:
    name: Build
    needs: find_dockerfiles
    if: github.base_ref == 'main'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.find_dockerfiles.outputs.packages) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d2759364c9af683 # v4
      - name: AWS creds
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.IAM_ROLE_ARN }}
      - uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2
      - uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          file: packages/${{ matrix.package }}/Dockerfile
          push: false

  check_build_result:
    name: Build Result
    needs: docker_build
    if: ${{ always() && github.base_ref == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          [[ "${{ needs.docker_build.result }}" != "success" ]] && exit 1 || exit 0
