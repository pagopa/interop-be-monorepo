name: PR validation
on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Cache turbo setup
        uses: actions/cache@640a1c2554105b57832a23eea0b4672fc7a790d5
        with:
          path: |
            .turbo
            packages/*/.turbo
          key: ${{ runner.os }}-turbo-check-formatting-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-turbo-check-formatting
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          run_install: true
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: ./package.json
      - run: pnpm format:check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0 # Fetch entire history so 'origin/develop' is available
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: ./package.json
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          run_install: true
      - name: Cache turbo setup
        uses: actions/cache@640a1c2554105b57832a23eea0b4672fc7a790d5
        with:
          path: |
            .turbo
            packages/*/.turbo
          key: ${{ runner.os }}-turbo-lint-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-turbo-lint-

      - name: Upload .turbo artifact
        uses: actions/upload-artifact@v4
        with:
          name: turbo-lint-${{ github.run_id }}
          path: |
            .turbo
          include-hidden-files: true
          retention-days: 1

      - name: Print turbo cahe folders
        run: ls -la .turbo
      - run: ls -la .turbo/cache
      - name: Print environment variables
        run: env | sort
      - run: pnpm lint
        env:
          TURBO_SCM_BASE: origin/develop
      - name: Print turbo summary
        run: |
          # Find latest summary file
          SUMMARY_FILE=$(ls -t .turbo/runs/*.json | head -n1)
          cat "$SUMMARY_FILE"

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4, 5]
        shardTotal: [5]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Cache turbo setup
        uses: actions/cache@640a1c2554105b57832a23eea0b4672fc7a790d5
        with:
          path: |
            .turbo
            packages/*/.turbo
          key: ${{ runner.os }}-turbo-test-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-turbo-test
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: ./package.json
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          run_install: true

      - name: Test integration
        run: pnpm test:integration -- --watch=false --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      # - run: pnpm test:ci -- --reporter=blob --outputFile=.vitest-reports/blob-${{ matrix.shardIndex }}.json --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      # - run: pnpm test:old -- --reporter=blob --outputFile=.vitest-reports/blob-${{ matrix.shardIndex }}.json --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      # - run: pnpm test:api -- --reporter=blob --outputFile=.vitest-reports/blob-${{ matrix.shardIndex }}.json --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      # - run: pnpm test:integration:old -- --reporter=blob --outputFile=.vitest-reports/blob-${{ matrix.shardIndex }}.json --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      # - name: Upload blob report to GitHub Actions Artifacts
      #   if: ${{ !cancelled() }}
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: blob-report-${{ matrix.shardIndex }}
      #     path: ./*
      #     include-hidden-files: true
      #     retention-days: 1

  # merge-reports:
  #   if: ${{ !cancelled() }}
  #   needs: [test]

  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

  #     - name: Install dependencies
  #       run: pnpm i

  #     - name: Download blob reports from GitHub Actions Artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: .vitest-reports
  #         pattern: blob-report-*
  #         merge-multiple: true

  #     - name: Merge reports
  #       run: npx vitest --merge-reports

  lint-openapi:
    name: Lint Open Api specification
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: stoplightio/spectral-action@2ad0b9302e32a77c1caccf474a9b2191a8060d83 #v0.8.11
        with:
          file_glob: "./packages/api-clients/open-api/!(selfcareV2ClientApi.yml|authorizationManagementApi.yaml|notifierApi.yml|apiGatewayApi.yml)"

  find_dockerfiles:
    name: Find Dockerfiles
    needs: [formatting, lint, test, lint-openapi]
    if: ${{ github.base_ref == 'develop' || github.base_ref == 'main' }}
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set_packages_output.outputs.packages }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Find packages
        id: set_packages_output
        run: |
          PACKAGES=$(find packages -type f -path "*/Dockerfile" | awk -F'/' '{print $2}' | jq -R -s -c 'split("\n")[:-1]')
          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT

  docker_build:
    name: Build
    needs: [find_dockerfiles]
    if: ${{ github.base_ref == 'main' }}
    runs-on: ubuntu-latest
    environment: ecr-ro
    permissions:
      contents: read
      id-token: write
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.find_dockerfiles.outputs.packages) }}
    env:
      DOCKER_BUILD_SUMMARY: "false"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.IAM_ROLE_ARN }}
          role-session-name: be-monorepo-pr-validation-${{ github.run_number }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2

      - name: Build Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          file: packages/${{ matrix.package }}/Dockerfile
          build-args: |
            NODE_REGISTRY=${{ vars.NODE_REGISTRY }}
          push: false

  check_build_result:
    name: Build Result
    needs: [docker_build]
    if: ${{ always() && github.base_ref == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check build result
        run: |
          [[ ${{ needs.docker_build.result }} != 'success' ]] && exit 1
          exit 0
