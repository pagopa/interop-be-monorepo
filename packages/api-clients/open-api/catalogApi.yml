openapi: 3.0.3
info:
  title: Catalog Process Micro Service
  description: This service is the catalog process
  version: "v1"
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  termsOfService: "http://swagger.io/terms/"
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: "/catalog-process/v1"
    description: This service is the catalog process
security:
  - bearerAuth: []
tags:
  - name: process
    description: Implements catalog process
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: health
    description: Verify service status
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /eservices:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    get:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Retrieve a list of E-Service
      operationId: getEServices
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: eservicesIds
          description: comma separated sequence of EService IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: producersIds
          description: comma separated sequence of producers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: attributesIds
          description: comma separated sequence of attributes IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: states
          description: comma separated sequence of states
          schema:
            type: array
            items:
              $ref: "#/components/schemas/EServiceDescriptorState"
            default: []
          explode: false
        - in: query
          name: agreementStates
          description: comma separated sequence of agreement states to filter the response with
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgreementState"
            default: []
          explode: false
        - in: query
          name: mode
          description: mode
          schema:
            $ref: "#/components/schemas/EServiceMode"
        - in: query
          name: delegated
          description: if true only delegated e-services will be returned, if false only non-delegated e-services will be returned, if not present all e-services will be returned
          schema:
            type: boolean
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        "200":
          description: A list of E-Service
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EServices"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Create a new e-service
      operationId: createEService
      requestBody:
        description: An E-Service seed
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EServiceSeed"
        required: true
      responses:
        "200":
          description: EService created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EService"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "409":
          description: Name Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    get:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Get an e-service
      operationId: getEServiceById
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: E-Service retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EService"
        "404":
          description: E-Service not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    put:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Updates e-service general information
      operationId: updateEServiceById
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id to update
          required: true
          schema:
            type: string
      requestBody:
        description: An E-Service update seed containing the possible updatable fields
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEServiceSeed"
      responses:
        "200":
          description: E-Service updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EService"
        "404":
          description: E-Service not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Deletes an e-service
      operationId: deleteEService
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: EService deleted
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/consumers:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    get:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Retrieve Consumers for an EService
      operationId: getEServiceConsumers
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        "200":
          description: E-Service consumers retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EServiceConsumers"
        "404":
          description: E-Service not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Adds a descriptor to the specified e-service
      operationId: createDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id
          required: true
          schema:
            type: string
      requestBody:
        description: An E-Service Descriptor seed
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EServiceDescriptorSeed"
        required: true
      responses:
        "200":
          description: EService Descriptor created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EServiceDescriptor"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    delete:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Deletes a draft descriptor
      operationId: deleteDraft
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service Id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: The Descriptor Id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: E-Service draft Descriptor deleted
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    put:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Updates a draft descriptor
      operationId: updateDraftDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: The Descriptor Id
          required: true
          schema:
            type: string
      requestBody:
        description: An E-Service Descriptor seed
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEServiceDescriptorSeed"
        required: true
      responses:
        "200":
          description: EService with draft descriptor updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EService"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}/publish:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Publish the selected descriptor.
      operationId: publishDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: E-Service Descriptor published
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}/suspend:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Suspend the selected descriptor.
      operationId: suspendDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: E-Service Descriptor suspended
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}/activate:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Activate the selected descriptor.
      operationId: activateDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: E-Service Descriptor activated
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}/clone:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Clones the selected descriptor.
      operationId: cloneEServiceByDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Cloned EService with a new draft descriptor updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EService"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}/archive:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Archive the selected descriptor.
      operationId: archiveDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: E-Service Descriptor archived
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}/update:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Update the selected descriptor.
      operationId: updateDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEServiceDescriptorQuotasSeed"
      responses:
        "200":
          description: EService descriptor updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EService"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}/documents:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Add new e-service document
      operationId: createEServiceDocument
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
      requestBody:
        description: E-Service document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEServiceDescriptorDocumentSeed"
      responses:
        "200":
          description: EService Document created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EService"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}/documents/{documentId}:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    get:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Get an e-service document
      operationId: getEServiceDocumentById
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: EService document metadata retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EServiceDoc"
        "404":
          description: EService not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Deletes an e-service document
      operationId: deleteEServiceDocumentById
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Document deleted.
        "404":
          description: E-Service descriptor document not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}/documents/{documentId}/update:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Updates an e-service document
      operationId: updateEServiceDocumentById
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
      requestBody:
        description: A payload containing the possible document updatable fields
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEServiceDescriptorDocumentSeed"
      responses:
        "200":
          description: EService Document updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EServiceDoc"
        "404":
          description: EService not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/riskAnalysis:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Create an e-service risk analysis
      operationId: createRiskAnalysis
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: A payload containing the risk analysis
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EServiceRiskAnalysisSeed"
      responses:
        "204":
          description: EService Risk Analysis created.
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: EService not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/riskAnalysis/{riskAnalysisId}:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Update an e-service risk analysis
      operationId: updateRiskAnalysis
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: riskAnalysisId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: A payload containing the risk analysis to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EServiceRiskAnalysisSeed"
      responses:
        "204":
          description: EService Risk Analysis created.
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: EService not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Delete an e-service risk analysis
      operationId: deleteRiskAnalysis
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: riskAnalysisId
          in: path
          description: the risk analysis id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: EService Risk Analysis deleted.
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/description/update:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Update an e-service description
      operationId: updateEServiceDescription
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: A payload containing the new description
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EServiceDescriptionUpdateSeed"
      responses:
        "200":
          description: EService description updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EService"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: EService not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/name/update:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Update an e-service name
      operationId: updateEServiceName
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: A payload containing the new name
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EServiceNameUpdateSeed"
      responses:
        "200":
          description: EService name updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EService"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: EService not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/:eServiceId/descriptors/:descriptorId/approve:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: approve a delegated new e-service version
      operationId: approveDelegatedEServiceDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: New delegated e-service version approved
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: EService not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/:eServiceId/descriptors/:descriptorId/reject:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: reject a delegated new e-service version
      operationId: rejectDelegatedEServiceDescriptor
      requestBody:
        description: Payload containing the reason of the rejection
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectDelegatedEServiceDescriptorSeed"
        required: true
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: New delegated e-service version rejected
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: EService not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eservices/{eServiceId}/descriptors/{descriptorId}/attributes/update:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Update e-service published descriptor attributes
      operationId: updateDescriptorAttributes
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: A payload containing the attributes
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributesSeed"
      responses:
        "200":
          description: EService descriptor attributes updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EService"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: E-Service or descriptor not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /status:
    get:
      security: []
      tags:
        - health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
components:
  parameters:
    CorrelationIdHeader:
      in: header
      name: X-Correlation-Id
      required: true
      schema:
        type: string
  schemas:
    EServiceSeed:
      type: object
      additionalProperties: false
      required:
        - name
        - description
        - technology
        - mode
        - descriptor
      properties:
        name:
          type: string
          minLength: 5
          maxLength: 60
        description:
          type: string
          minLength: 10
          maxLength: 250
        technology:
          $ref: "#/components/schemas/EServiceTechnology"
        mode:
          $ref: "#/components/schemas/EServiceMode"
        descriptor:
          $ref: "#/components/schemas/DescriptorSeedForEServiceCreation"
        isSignalHubEnabled:
          type: boolean
    UpdateEServiceSeed:
      type: object
      additionalProperties: false
      required:
        - name
        - description
        - technology
        - mode
      properties:
        name:
          type: string
          minLength: 5
          maxLength: 60
        description:
          type: string
          minLength: 10
          maxLength: 250
        technology:
          $ref: "#/components/schemas/EServiceTechnology"
        mode:
          $ref: "#/components/schemas/EServiceMode"
        isSignalHubEnabled:
          type: boolean
    DescriptorSeedForEServiceCreation:
      required:
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
          minLength: 10
          maxLength: 250
        audience:
          type: array
          items:
            type: string
            minLength: 0
            maxLength: 250
        voucherLifespan:
          type: integer
          format: int32
          minimum: 60
          maximum: 86400
        dailyCallsPerConsumer:
          description: "maximum number of daily calls that this descriptor can afford."
          type: integer
          format: int32
          minimum: 1
        dailyCallsTotal:
          description: "total daily calls available for this e-service."
          type: integer
          format: int32
          minimum: 1
        agreementApprovalPolicy:
          $ref: "#/components/schemas/AgreementApprovalPolicy"
    EServiceDescriptorSeed:
      required:
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
        - attributes
        - docs
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
          minLength: 10
          maxLength: 250
        audience:
          type: array
          items:
            type: string
            minLength: 0
            maxLength: 250
        voucherLifespan:
          type: integer
          format: int32
          minimum: 60
          maximum: 86400
        dailyCallsPerConsumer:
          description: "maximum number of daily calls that this descriptor can afford."
          type: integer
          format: int32
          minimum: 1
        dailyCallsTotal:
          description: "total daily calls available for this e-service."
          type: integer
          format: int32
          minimum: 1
        agreementApprovalPolicy:
          $ref: "#/components/schemas/AgreementApprovalPolicy"
        attributes:
          $ref: "#/components/schemas/AttributesSeed"
        docs:
          type: array
          items:
            $ref: "#/components/schemas/CreateEServiceDescriptorDocumentSeed"
    UpdateEServiceDescriptorSeed:
      required:
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
        - attributes
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
          minLength: 10
          maxLength: 250
        audience:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 250
        voucherLifespan:
          type: integer
          format: int32
          minimum: 60
          maximum: 86400
        dailyCallsPerConsumer:
          description: "maximum number of daily calls that this descriptor can afford."
          type: integer
          format: int32
          minimum: 1
        dailyCallsTotal:
          description: "total daily calls available for this e-service."
          type: integer
          format: int32
          minimum: 1
        agreementApprovalPolicy:
          $ref: "#/components/schemas/AgreementApprovalPolicy"
        attributes:
          $ref: "#/components/schemas/AttributesSeed"
    UpdateEServiceDescriptorQuotasSeed:
      type: object
      additionalProperties: false
      properties:
        voucherLifespan:
          type: integer
          format: int32
          minimum: 60
          maximum: 86400
        dailyCallsPerConsumer:
          type: integer
          format: int32
          minimum: 1
        dailyCallsTotal:
          type: integer
          format: int32
          minimum: 1
      required:
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
    CreateEServiceDescriptorDocumentSeed:
      required:
        - documentId
        - kind
        - prettyName
        - filePath
        - fileName
        - contentType
        - checksum
        - serverUrls
      type: object
      additionalProperties: false
      properties:
        documentId:
          type: string
          format: uuid
        kind:
          $ref: "#/components/schemas/EServiceDocumentKind"
        prettyName:
          type: string
        filePath:
          type: string
        fileName:
          type: string
        contentType:
          type: string
        checksum:
          type: string
        serverUrls:
          type: array
          items:
            type: string
    UpdateEServiceDescriptorDocumentSeed:
      required:
        - prettyName
      type: object
      additionalProperties: false
      properties:
        prettyName:
          type: string
          minLength: 5
          maxLength: 60
    AttributesSeed:
      properties:
        certified:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/AttributeSeed"
        declared:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/AttributeSeed"
        verified:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/AttributeSeed"
      required:
        - certified
        - declared
        - verified
    AttributeSeed:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        explicitAttributeVerification:
          type: boolean
      required:
        - id
        - explicitAttributeVerification
    AgreementApprovalPolicy:
      type: string
      description: |
        EService Descriptor policy for new Agreements approval.
        AUTOMATIC - the agreement will be automatically approved if Consumer attributes are met
        MANUAL - the Producer must approve every agreement for this Descriptor.
      enum:
        - AUTOMATIC
        - MANUAL
    EServiceRiskAnalysisSeed:
      type: object
      additionalProperties: false
      required:
        - name
        - riskAnalysisForm
      properties:
        name:
          type: string
        riskAnalysisForm:
          $ref: "#/components/schemas/EServiceRiskAnalysisFormSeed"
    EServiceRiskAnalysisFormSeed:
      type: object
      additionalProperties: false
      properties:
        version:
          type: string
          minLength: 1
          maxLength: 250
        answers:
          additionalProperties:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 250
      required:
        - version
        - answers
    EService:
      type: object
      additionalProperties: false
      required:
        - id
        - producerId
        - name
        - description
        - technology
        - descriptors
        - riskAnalysis
        - mode
      properties:
        id:
          type: string
          format: uuid
        producerId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        technology:
          $ref: "#/components/schemas/EServiceTechnology"
        descriptors:
          type: array
          items:
            $ref: "#/components/schemas/EServiceDescriptor"
        riskAnalysis:
          type: array
          items:
            $ref: "#/components/schemas/EServiceRiskAnalysis"
        mode:
          $ref: "#/components/schemas/EServiceMode"
        isSignalHubEnabled:
          type: boolean
    EServiceMode:
      type: string
      description: Risk Analysis Mode
      enum:
        - RECEIVE
        - DELIVER
    EServiceRiskAnalysis:
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - riskAnalysisForm
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        riskAnalysisForm:
          $ref: "#/components/schemas/EServiceRiskAnalysisForm"
        createdAt:
          type: string
          format: date-time
    EServiceRiskAnalysisForm:
      type: object
      additionalProperties: false
      required:
        - id
        - version
        - singleAnswers
        - multiAnswers
      properties:
        id:
          type: string
          format: uuid
        version:
          type: string
        singleAnswers:
          type: array
          items:
            $ref: "#/components/schemas/EServiceRiskAnalysisSingleAnswer"
        multiAnswers:
          type: array
          items:
            $ref: "#/components/schemas/EServiceRiskAnalysisMultiAnswer"
    EServiceRiskAnalysisSingleAnswer:
      type: object
      additionalProperties: false
      required:
        - id
        - key
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
        value:
          type: string
    EServiceRiskAnalysisMultiAnswer:
      type: object
      additionalProperties: false
      required:
        - id
        - key
        - values
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
        values:
          type: array
          items:
            type: string
    EServiceConsumers:
      type: object
      additionalProperties: false
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/EServiceConsumer"
        totalCount:
          type: integer
          format: int32
      required:
        - results
        - totalCount
    EServiceConsumer:
      type: object
      additionalProperties: false
      required:
        - descriptorVersion
        - descriptorState
        - agreementState
        - consumerName
        - consumerExternalId
      properties:
        descriptorVersion:
          type: integer
          format: int32
        descriptorState:
          $ref: "#/components/schemas/EServiceDescriptorState"
        agreementState:
          $ref: "#/components/schemas/AgreementState"
        consumerName:
          type: string
        consumerExternalId:
          type: string
    EServices:
      type: object
      additionalProperties: false
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/EService"
        totalCount:
          type: integer
          format: int32
      required:
        - results
        - totalCount
    EServiceDoc:
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - contentType
        - prettyName
        - path
        - checksum
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        contentType:
          type: string
        prettyName:
          type: string
        path:
          type: string
        checksum:
          type: string
    EServiceDescriptionUpdateSeed:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
          minLength: 10
          maxLength: 250
      required:
        - description
    EServiceNameUpdateSeed:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          minLength: 5
          maxLength: 60
      required:
        - name
    EServiceDescriptor:
      type: object
      additionalProperties: false
      required:
        - id
        - version
        - docs
        - state
        - creationDate
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
        - serverUrls
        - attributes
      properties:
        id:
          type: string
          format: uuid
        version:
          type: string
        description:
          type: string
        audience:
          type: array
          items:
            type: string
        voucherLifespan:
          type: integer
          format: int32
        dailyCallsPerConsumer:
          description: "maximum number of daily calls that this descriptor can afford per consumer."
          type: integer
          format: int32
          minimum: 1
        dailyCallsTotal:
          description: "total daily calls available for this e-service."
          type: integer
          format: int32
          minimum: 1
        interface:
          $ref: "#/components/schemas/EServiceDoc"
        docs:
          type: array
          items:
            $ref: "#/components/schemas/EServiceDoc"
        state:
          $ref: "#/components/schemas/EServiceDescriptorState"
        agreementApprovalPolicy:
          $ref: "#/components/schemas/AgreementApprovalPolicy"
        serverUrls:
          type: array
          items:
            type: string
        publishedAt:
          type: string
          format: date-time
        suspendedAt:
          type: string
          format: date-time
        deprecatedAt:
          type: string
          format: date-time
        archivedAt:
          type: string
          format: date-time
        attributes:
          $ref: "#/components/schemas/Attributes"
        rejectionReasons:
          type: array
          items:
            $ref: "#/components/schemas/RejectionReason"
    Attribute:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        explicitAttributeVerification:
          type: boolean
      required:
        - id
        - explicitAttributeVerification
    Attributes:
      properties:
        certified:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/Attribute"
        declared:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/Attribute"
        verified:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/Attribute"
      required:
        - certified
        - declared
        - verified
    EServiceTechnology:
      type: string
      description: API Technology
      enum:
        - REST
        - SOAP
    EServiceDescriptorState:
      type: string
      description: EService Descriptor State
      enum:
        - DRAFT
        - PUBLISHED
        - DEPRECATED
        - SUSPENDED
        - ARCHIVED
        - WAITING_FOR_APPROVAL
    EServiceDocumentKind:
      type: string
      description: EService Document Kind
      enum:
        - INTERFACE
        - DOCUMENT
    AgreementState:
      type: string
      description: Agreement State
      enum:
        - DRAFT
        - PENDING
        - ACTIVE
        - SUSPENDED
        - ARCHIVED
        - MISSING_CERTIFIED_ATTRIBUTES
        - REJECTED
    RejectionReason:
      type: object
      additionalProperties: false
      properties:
        rejectionReason:
          type: string
        rejectedAt:
          type: string
          format: date-time
      required:
        - rejectionReason
        - rejectedAt
    RejectDelegatedEServiceDescriptorSeed:
      type: object
      additionalProperties: false
      properties:
        rejectionReason:
          type: string
      required:
        - rejectionReason
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: "^[ -~]{0,64}$"
          type: string
        correlationId:
          description: Unique identifier of the request
          example: "53af4f2d-0c87-41ef-a645-b726a821852b"
          maxLength: 64
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: "^.{0,1024}$"
          type: string
        errors:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ProblemError"
      additionalProperties: false
      required:
        - type
        - status
        - title
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          minLength: 8
          maxLength: 8
          pattern: "^[0-9]{3}-[0-9]{4}$"
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 4096
          pattern: "^.{0,1024}$"
          type: string
      required:
        - code
        - detail
  securitySchemes:
    bearerAuth:
      type: http
      description: A bearer token in the format of a JWS and comformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).
      scheme: bearer
      bearerFormat: JWT
