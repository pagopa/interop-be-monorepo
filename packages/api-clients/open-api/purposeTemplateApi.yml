openapi: 3.0.3
info:
  title: Purpose Template Process Micro Service
  description: Offers operations to retrieve purpose template data
  version: "{{version}}"
  contact:
    name: API Support
    url: "http://www.example.com/support"
    email: support@example.com
  termsOfService: "http://swagger.io/terms/"
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: "/"
    description: This service is the purpose template process
security:
  - bearerAuth: []
tags:
  - name: purposeTeamplate
    description: Implements purpose template process
    externalDocs:
      description: Find out more
      url: "http://swagger.io"
  - name: health
    description: Verify service status
    externalDocs:
      description: Find out more
      url: "http://swagger.io"
paths:
  /status:
    get:
      security: []
      tags:
        - health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        "200":
          description: successful operation
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /purposeTemplates:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
    get:
      tags:
        - purposeTemplate
      operationId: getPurposeTemplates
      description: Retrieve Purpose Templates with pagination and filters
      parameters:
        - in: query
          name: eserviceIds
          description: comma separated sequence of EService IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: creatorId
          description: filter by creator id
          schema:
            type: string
            format: uuid
        - in: query
          name: name
          description: filter by template name
          schema:
            type: string
        - in: query
          name: state
          description: filter by template state
          schema:
            $ref: "#/components/schemas/PurposeTemplateState"
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        "200":
          description: Purpose Templates requested
          headers:
            X-Metadata-Version:
              $ref: "#/components/headers/MetadataVersionHeader"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PurposeTemplate"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    post:
      tags:
        - purposeTemplate
      operationId: createPurposeTemplate
      description: Creates the Purpose Template (Draft state)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurposeTemplateSeed"
        required: true
      responses:
        "201":
          description: Purpose Template created
          headers:
            X-Metadata-Version:
              $ref: "#/components/headers/MetadataVersionHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurposeTemplate"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /purposeTemplates/{id}:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
      - name: id
        in: path
        description: the purpose template id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - purposeTemplate
      operationId: getPurposeTemplate
      description: Retrieve the Purpose template
      responses:
        "200":
          description: Purpose template requested
          headers:
            X-Metadata-Version:
              $ref: "#/components/headers/MetadataVersionHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurposeTemplate"
        "404":
          description: Purpose Template Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    post:
      tags:
        - purposeTemplate
      operationId: updatePurposeTemplate
      description: Updates the Purpose Template (Draft state)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurposeTemplateSeed"
        required: true
      responses:
        "200":
          description: Purpose Template updated
          headers:
            X-Metadata-Version:
              $ref: "#/components/headers/MetadataVersionHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurposeTemplate"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Purpose Template Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      parameters:
        - $ref: "#/components/parameters/CorrelationIdHeader"
      tags:
        - purposeTemplate
      operationId: deletePurposeTemplate
      description: Deletes a specific purpose template if it is in Draft state
      responses:
        "204":
          description: Purpose template deleted
        "403":
          description: Purpose template is not in Draft state
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Purpose Template Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /purposeTemplates/{id}/riskAnalysis:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
      - name: id
        in: path
        description: the purpose template id
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - purposeTemplate
      operationId: updatePurposeTemplateRiskAnalysis
      description: Updates the purpose template risk analysis
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RiskAnalysisFormTemplate"
        required: true
      responses:
        "200":
          description: Purpose Template Risk Analysis updated
          headers:
            X-Metadata-Version:
              $ref: "#/components/headers/MetadataVersionHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurposeTemplate"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Purpose Template Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /purposeTemplates/{id}/suspend:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Suspend Purpose Template
      description: Suspends the purpose template by id (from Active State to Suspended State)
      operationId: suspendPurposeTemplate
      tags:
        - purposeTemplate
      responses:
        "200":
          description: Purpose Template Suspended
          headers:
            X-Metadata-Version:
              $ref: "#/components/headers/MetadataVersionHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurposeTemplate"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Organization not allowed
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Purpose Template Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /purposeTemplates/{id}/archive:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Archive Purpose Template
      description: Archives the purpose template by id (from Suspended State to Archived State)
      operationId: archivePurposeTemplate
      tags:
        - purposeTemplate
      responses:
        "200":
          description: Purpose Template Archived
          headers:
            X-Metadata-Version:
              $ref: "#/components/headers/MetadataVersionHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurposeTemplate"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Organization not allowed
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Purpose Template Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /purposeTemplates/{id}/activate:
    parameters:
      - $ref: "#/components/parameters/CorrelationIdHeader"
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Activate Purpose Template
      description: Activates the purpose template by id (from Archived or Suspended State to Active State)
      operationId: activatePurposeTemplate
      tags:
        - purposeTemplate
      responses:
        "200":
          description: Purpose Template Activated
          headers:
            X-Metadata-Version:
              $ref: "#/components/headers/MetadataVersionHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurposeTemplate"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Organization not allowed
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Purpose Template Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
components:
  headers:
    MetadataVersionHeader:
      description: The version number of the resource in the read model
      schema:
        type: integer
        format: int32
  parameters:
    CorrelationIdHeader:
      in: header
      name: X-Correlation-Id
      required: true
      schema:
        type: string
  schemas:
    PurposeTemplate:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        targetDescription:
          type: string
        targetTenantKind:
          $ref: "#/components/schemas/TenantKind"
        creatorId:
          type: string
          format: uuid
        eservicesVersions:
          type: array
          items:
            $ref: "#/components/schemas/EserviceDescriptorVersionPurposeTemplate"
        state:
          $ref: "#/components/schemas/PurposeTemplateState"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        purposeTitle:
          type: string
        purposeDescription:
          type: string
        purposeRiskAnalysisForm:
          $ref: "#/components/schemas/RiskAnalysisFormTemplate"
          required: false
        purposeIsFreeOfCharge:
          type: boolean
          required: true
        purposeFreeOfChargeReason:
          type: string
          required: false
        purposeDailyCalls:
          type: integer
          format: int32
          required: false
      required:
        - id
        - creatorId
        - name
        - state
        - eserviceId
      description: business representation of a purpose template
    PurposeTemplateSeed:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        targetDescription:
          type: string
        targetTenantKind:
          $ref: "#/components/schemas/TenantKind"
        creatorId:
          type: string
          format: uuid
        eservices:
          type: array
          items:
            $ref: "#/components/schemas/EserviceDescriptorVersionPurposeTemplate"
    PurposeTemplateState:
      type: string
      description: Purpose Template State
      enum:
        - ACTIVE
        - DRAFT
        - SUSPENDED
        - ARCHIVED
    TenantKind:
      type: string
      description: Tenant Kind
      enum:
        - PA
        - PRIVATE
        - GSP
        - SCP
    EserviceDescriptorVersionPurposeTemplate:
      type: object
      additionalProperties: false
      properties:
        eserviceId:
          type: string
          format: uuid
        descriptorId:
          type: string
          format: uuid
    RiskAnalysisFormTemplate:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        version:
          type: string
        singleAnswers:
          type: array
          items:
            $ref: "#/components/schemas/RiskAnalysisTemplateSingleAnswer"
        multiAnswers:
          type: array
          items:
            $ref: "#/components/schemas/RiskAnalysisTemplateMultiAnswer"
    RiskAnalysisTemplateSingleAnswer:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
          required: true
        value:
          type: string
          required: false
        editable:
          type: boolean
          required: true
        annotation:
          $ref: "#/components/schemas/RiskAnalysisTemplateAnswerAnnotation"
          required: false
        assistiveText:
          type: string
          required: false
        suggestedValues:
          type: array
          items:
            type: string
    RiskAnalysisTemplateMultiAnswer:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
          required: true
        value:
          type: string
          required: false
        editable:
          type: boolean
          required: true
        annotation:
          $ref: "#/components/schemas/RiskAnalysisTemplateAnswerAnnotation"
          required: false
        assistiveText:
          type: string
          required: false
    RiskAnalysisTemplateAnswerAnnotation:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
          required: false
        docs:
          type: array
          items:
            $ref: "#/components/schemas/RiskAnalysisTemplateAnswerAnnotationDocument"
    RiskAnalysisTemplateAnswerAnnotationDocument:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        contentType:
          type: string
        prettyName:
          type: string
        path:
          type: string
        createdAt:
          type: string
          format: date-time
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: "^[ -~]{0,64}$"
          type: string
        correlationId:
          description: Unique identifier of the request
          example: "53af4f2d-0c87-41ef-a645-b726a821852b"
          maxLength: 64
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: "^.{0,1024}$"
          type: string
        errors:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ProblemError"
      additionalProperties: false
      required:
        - type
        - status
        - title
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          minLength: 8
          maxLength: 8
          pattern: "^[0-9]{3}-[0-9]{4}$"
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 4096
          pattern: "^.{0,1024}$"
          type: string
      required:
        - code
        - detail
  securitySchemes:
    bearerAuth:
      type: http
      description: "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)."
      scheme: bearer
      bearerFormat: JWT
