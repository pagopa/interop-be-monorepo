openapi: 3.0.3
info:
  title: M2M Events Manager
  description: HTTP service to manage M2M Events
  version: "{{version}}"
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  termsOfService: "http://swagger.io/terms/"
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: "/"
    description: HTTP service to manage M2M Events
security:
  - bearerAuth: []
tags:
  - name: m2mEvents
    description: M2M Events routes
  - name: health
    description: Verify service status
paths:
  /eservices:
    get:
      tags:
        - m2mEvents
      summary: Get paginated eservice m2m events
      description: Returns a paginated list of eservice m2m events
      operationId: getEServiceM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: E-Service M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EServiceM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /agreements:
    get:
      tags:
        - m2mEvents
      summary: Get paginated agreement m2m events
      description: Returns a paginated list of agreement m2m events
      operationId: getAgreementM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: Agreement M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /purposes:
    get:
      tags:
        - m2mEvents
      summary: Get paginated purpose m2m events
      description: Returns a paginated list of purpose m2m events
      operationId: getPurposeM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: Purpose M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurposeM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /tenants:
    get:
      tags:
        - m2mEvents
      summary: Get paginated tenant m2m events
      description: Returns a paginated list of tenant m2m events
      operationId: getTenantM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: Tenant M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /attributes:
    get:
      tags:
        - m2mEvents
      summary: Get paginated attribute m2m events
      description: Returns a paginated list of attribute m2m events
      operationId: getAttributeM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: Attribute M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /consumerDelegations:
    get:
      tags:
        - m2mEvents
      summary: Get paginated consumer delegation m2m events
      description: Returns a paginated list of consumer delegation m2m events
      operationId: getConsumerDelegationM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: Consumer Delegation M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsumerDelegationM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /producerDelegations:
    get:
      tags:
        - m2mEvents
      summary: Get paginated producer delegation m2m events
      description: Returns a paginated list of producer delegation m2m events
      operationId: getProducerDelegationM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: Producer Delegation M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProducerDelegationM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /clients:
    get:
      tags:
        - m2mEvents
      summary: Get paginated client m2m events
      description: Returns a paginated list of client m2m events
      operationId: getClientM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: Client M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /producerKeychains:
    get:
      tags:
        - m2mEvents
      summary: Get paginated producer keychain m2m events
      description: Returns a paginated list of producer keychain m2m events
      operationId: getProducerKeychainM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: Producer Keychain M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProducerKeychainM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /keys:
    get:
      tags:
        - m2mEvents
      summary: Get paginated key m2m events
      description: Returns a paginated list of key m2m events
      operationId: getKeyM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: Key M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /producerKeys:
    get:
      tags:
        - m2mEvents
      summary: Get paginated producer key m2m events
      description: Returns a paginated list of producer key m2m events
      operationId: getProducerKeyM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: Producer Key M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProducerKeyM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /eserviceTemplates:
    get:
      tags:
        - m2mEvents
      summary: Get paginated eservice template m2m events
      description: Returns a paginated list of eservice template m2m events
      operationId: getEServiceTemplateM2MEvents
      parameters:
        - $ref: '#/components/parameters/LastEventId'
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: E-Service Template M2M events retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EServiceTemplateM2MEvents"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /status:
    get:
      security: []
      tags:
        - health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        "200":
          description: successful operation
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
components:
  parameters:
    LastEventId:
      in: query
      name: lastEventId
      required: true
      schema:
        type: string
        format: uuid
    Limit:
      in: query
      name: limit
      required: true
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 50
    CorrelationIdHeader:
      in: header
      name: X-Correlation-Id
      required: true
      schema:
        type: string
  schemas:
    EServiceM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        eserviceId:
          type: string
          format: uuid
        descriptorId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - eserviceId
        - createdAt                
    EServiceM2MEvents:  
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/EServiceM2MEvent"  
    AgreementM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        agreementId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - agreementId
        - createdAt
    AgreementM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/AgreementM2MEvent"  
    PurposeM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        purposeId:
          type: string
          format: uuid
        versionId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - purposeId
        - versionId
        - createdAt
    PurposeM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/PurposeM2MEvent"  
    TenantM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        tenantId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - tenantId
        - createdAt
    TenantM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/TenantM2MEvent"  
    AttributeM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        attributeId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - attributeId
        - createdAt
    AttributeM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/AttributeM2MEvent"  
    ConsumerDelegationM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        delegationId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - delegationId
        - createdAt
    ConsumerDelegationM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/ConsumerDelegationM2MEvent"  
    ProducerDelegationM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        delegationId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - delegationId
        - createdAt
    ProducerDelegationM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/ProducerDelegationM2MEvent"  
    ClientM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        clientId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - clientId
        - createdAt
    ClientM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/ClientM2MEvent"  
    ProducerKeychainM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        keychainId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - keychainId
        - createdAt
    ProducerKeychainM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/ProducerKeychainM2MEvent"  
    KeyM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        kid:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - kid
        - createdAt
    KeyM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/KeyM2MEvent"  
    ProducerKeyM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        kid:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - kid
        - createdAt
    ProducerKeyM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/ProducerKeyM2MEvent"  
    EServiceTemplateM2MEvent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        templateId:
          type: string
          format: uuid
        versionId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - templateId
        - createdAt
    EServiceTemplateM2MEvents:
      type: object  
      properties:  
        events:  
          type: array  
          items:  
            $ref: "#/components/schemas/EServiceTemplateM2MEvent"  
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: "^[ -~]{0,64}$"
          type: string
        correlationId:
          description: Unique identifier of the request
          example: "53af4f2d-0c87-41ef-a645-b726a821852b"
          maxLength: 64
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: "^.{0,1024}$"
          type: string
        errors:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ProblemError"
      additionalProperties: false
      required:
        - type
        - status
        - title
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          minLength: 8
          maxLength: 8
          pattern: "^[0-9]{3}-[0-9]{4}$"
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 4096
          pattern: "^.{0,1024}$"
          type: string
      required:
        - code
        - detail
  securitySchemes:
    bearerAuth:
      type: http
      description: A bearer token in the format of a JWS and comformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).
      scheme: bearer
      bearerFormat: JWT
